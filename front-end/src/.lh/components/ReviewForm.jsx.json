{
    "sourceFile": "components/ReviewForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1701547008194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1701547039732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,22 +45,18 @@\n     //       note,\n     //     }),\n     //   });\n     try {\n-      const response = await axios.post(\n-        `${SERVER_URL}prestataires/reviews`,\n-        {\n+      const response = await axios.post(`${SERVER_URL}prestataires/reviews`, {\n           emailPrestataire,\n           emailClient,\n           comment,\n           note,\n-        },\n-        {\n+      }, {\n           headers: {\n-            \"Content-Type\": \"application/json\",\n+              'Content-Type': 'application/json',\n           },\n-        }\n-      );\n+      });\n \n       if (!response.ok) {\n         throw new Error(\"La soumission de la revue a échoué.\");\n       }\n@@ -69,10 +65,10 @@\n       setEmailPrestataire(\"\");\n       setEmailClient(\"\");\n       setComment(\"\");\n       setNote(\"\");\n-      alert(\"La revue a été soumise avec succès.\");\n-      window.location.href = \"/profile\";\n+        alert(\"La revue a été soumise avec succès.\");\n+        window.location.href = \"/profile\";\n     } catch (error) {\n       console.error(\"Erreur lors de la soumission de la revue\", error);\n       setSubmissionError(\n         \"La soumission de la revue a échoué. Veuillez réessayer.\"\n@@ -86,14 +82,14 @@\n     setOpen(true);\n   };\n \n   const handleClose = () => {\n-    setOpen(false);\n-    window.location.href = \"/profile\";\n+      setOpen(false);\n+      window.location.href = \"/profile\";\n   };\n \n   return (\n-    <>\n+      <>\n       {/* <Button className=\"profile-card__button button--orange\" variant=\"contained\" onClick={handleOpen}>\n         <CommentBankTwoToneIcon /> Noter les prestations\n       </Button> */}\n       <Dialog open={open} onClose={handleClose}>\n@@ -179,5 +175,5 @@\n     </>\n   );\n };\n \n-export default ReviewForm;\n+export default ReviewForm;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1701547074782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n   DialogTitle,\n } from \"@mui/material\";\n import CancelSharpIcon from \"@mui/icons-material/CancelSharp\";\n import CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\n+import axios from \"@mui/icons-material/axios\";\n \n const ReviewForm = () => {\n   const [emailPrestataire, setEmailPrestataire] = useState(\"\");\n   const [emailClient, setEmailClient] = useState(\n"
                }
            ],
            "date": 1701547008194,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { SERVER_URL } from \"../constants\";\n\nimport Email from \"@mui/icons-material/Email\";\nimport StarRate from \"@mui/icons-material/StarRate\";\nimport { InputAdornment, Container } from \"@mui/material\";\nimport CommentBankTwoToneIcon from \"@mui/icons-material/CommentBankTwoTone\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport CancelSharpIcon from \"@mui/icons-material/CancelSharp\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\n\nconst ReviewForm = () => {\n  const [emailPrestataire, setEmailPrestataire] = useState(\"\");\n  const [emailClient, setEmailClient] = useState(\n    sessionStorage.getItem(\"UserMail\")\n  );\n  const [comment, setComment] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [submissionError, setSubmissionError] = useState(null);\n  const [open, setOpen] = useState(true);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    setSubmissionError(null);\n    setEmailClient(sessionStorage.getItem(\"UserMail\"));\n    console.log(emailClient);\n    // try {\n    //   const response = await fetch(SERVER_URL + \"prestataires/reviews\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/x-www-form-urlencoded\",\n    //     },\n    //     body: new URLSearchParams({\n    //       emailPrestataire,\n    //       emailClient,\n    //       comment,\n    //       note,\n    //     }),\n    //   });\n    try {\n      const response = await axios.post(`${SERVER_URL}prestataires/reviews`, {\n          emailPrestataire,\n          emailClient,\n          comment,\n          note,\n      }, {\n          headers: {\n              'Content-Type': 'application/json',\n          },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"La soumission de la revue a échoué.\");\n      }\n\n      // Réinitialisez les champs après une soumission réussie\n      setEmailPrestataire(\"\");\n      setEmailClient(\"\");\n      setComment(\"\");\n      setNote(\"\");\n        alert(\"La revue a été soumise avec succès.\");\n        window.location.href = \"/profile\";\n    } catch (error) {\n      console.error(\"Erreur lors de la soumission de la revue\", error);\n      setSubmissionError(\n        \"La soumission de la revue a échoué. Veuillez réessayer.\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n      setOpen(false);\n      window.location.href = \"/profile\";\n  };\n\n  return (\n      <>\n      {/* <Button className=\"profile-card__button button--orange\" variant=\"contained\" onClick={handleOpen}>\n        <CommentBankTwoToneIcon /> Noter les prestations\n      </Button> */}\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle> Nouveau Commentaire </DialogTitle>\n        <DialogContent>\n          <Container>\n            <form>\n              <div>\n                <TextField\n                  label=\"Email du Prestataire\"\n                  value={emailPrestataire}\n                  fullWidth\n                  margin=\"normal\"\n                  onChange={(e) => setEmailPrestataire(e.target.value)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Email />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </div>\n              <div>\n                <TextField\n                  label=\"Commentaire\"\n                  multiline\n                  rows={4}\n                  value={comment}\n                  fullWidth\n                  margin=\"normal\"\n                  onChange={(e) => setComment(e.target.value)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <CommentBankTwoToneIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </div>\n              <div>\n                <TextField\n                  label=\"Note\"\n                  type=\"number\"\n                  value={note}\n                  fullWidth\n                  margin=\"normal\"\n                  onChange={(e) => setNote(e.target.value)}\n                  inputProps={{ min: 0, max: 5 }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <StarRate />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </div>\n              {submissionError && (\n                <p style={{ color: \"red\" }}>{submissionError}</p>\n              )}\n              <div>\n                <DialogActions>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSubmit}\n                    disabled={loading}\n                    startIcon={<CheckCircleOutlineIcon color=\"success\" />}\n                  >\n                    {loading ? \"En cours...\" : \"Soumettre la Revue\"}\n                  </Button>\n                  <Button onClick={handleClose}>\n                    <CancelSharpIcon color=\"error\" />\n                  </Button>\n                </DialogActions>\n              </div>\n            </form>\n          </Container>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ReviewForm;"
        }
    ]
}